---
const errors = {
  email: '',
  password: '',
};
if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData();

    const email = data.get('email');
    const password = data.get('password');

    if (
      typeof email !== 'string' ||
      !email.match(/^[^\s@]+@[^\s@]+\.[^\s@]+$/)
    ) {
      errors.email = 'Please enter a valid email address.';
    }

    if (typeof password !== 'string' || password.length < 6) {
      errors.password += 'Password must be at least 6 characters. ';
    }

    // const hasErrors = Object.values(errors).some((msg) => msg);
    // // if (!hasErrors) {
    // //   await registerUser({name, email, password});
    // //   return Astro.redirect("/login");
    // // }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

import AnimatedGridPattern from '../ui/animated-grid-pattern';
import { cn } from '@/lib/utils';
import SignIn from '@/components/Login/signin';
---

<main class="grid grid-cols-12 container mx-auto h-[calc(100svh-60px)] p-5">
  <div class="hidden lg:flex md:col-span-6">
    <div
      class="relative flex h-full w-full items-center justify-center overflow-hidden rounded-lg border bg-background md:shadow-xl"
    >
      <p
        class="z-10 whitespace-pre-wrap text-center text-5xl tracking-tighter text-black dark:text-white"
      >
        Log In to Idea<span class="font-medium">Go</span>
      </p>
      <br />
      <AnimatedGridPattern
        client:idle
        numSquares={50}
        maxOpacity={0.1}
        duration={3}
        repeatDelay={1}
        className={cn(
          '[mask-image:radial-gradient(500px_circle_at_center,white,transparent)]',
          'inset-x-0 inset-y-[-30%] h-[200%] skew-y-12'
        )}
      />
    </div>
  </div>
  <div
    class="col-span-12 lg:col-span-6 h-full flex flex-col w-full justify-around items-center"
  >
    <SignIn client:load />
  </div>
</main>
